/* 
Challenge #370 [Easy] UPC check digits
For example, given the first 11 digits of a UPC 03600029145, you can compute the check digit like this:
Sum the odd-numbered digits (0 + 6 + 0 + 2 + 1 + 5 = 14).
Multiply the result by 3 (14 × 3 = 42).
Add the even-numbered digits (42 + (3 + 0 + 0 + 9 + 4) = 58).
Find the result modulo 10 (58 divided by 10 is 5 remainder 8, so M = 8).
If M is not 0, subtract M from 10 to get the check digit (10 - M = 10 - 8 = 2).
So the check digit is 2, and the complete UPC is 036000291452.
*/

package challenge.pkg370;

import java.util.ArrayList;
import java.util.Collections;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class Challenge370 {

    public static void main(String[] args) {
      long zero = 0;
      long odd = 0;
      long even = 0;
      long result = 0;
      long M =0; //mala litera
      long number2 = 0; //inna nazwa
      do{ //wcięcia :(
           try{
        Scanner scanner = new Scanner(System.in);
        System.out.println("Type number");
        number2 = scanner.nextLong();
      }catch(InputMismatchException n){
          System.out.println("Type only numbers");
      }
      }
      while(number2 == 0 ); // to powinno byc przy klamrze, formatowanie :(
      long number = number2;
        List<Long> UPC = new ArrayList(); //co to jest UPC
      do{
          UPC.add(number%10);
          number /=10;
      }while(number != 0);
            while(UPC.size() < 11){
                UPC.add(zero);
            }
            Collections.reverse(UPC);
        for (int i = 0; i < UPC.size(); i += 2) //klamry :O
            odd += UPC.get(i);
            
        odd *=3;
        for (int i = 1; i < UPC.size(); i += 2)
            even += UPC.get(i);
        
        result = odd+even;
        M = result%10;
        if (M != 0)
              M = 10 -M; //klamry
              
        UPC.add(M);
           System.out.println("M:" + M);
           System.out.println(number2 +""+M);
    }
   
}
